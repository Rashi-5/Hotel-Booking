@model HotelBookingSystem.Models.Chatbot.ChatMessage

<div id="chatIcon" style="position: fixed; bottom: 30px; right: 30px; z-index: 1000; cursor: pointer;">
    <img src="/images/live-chat.png" alt="Chat" style="width:60px; height:60px; border-radius:50%; box-shadow:0 2px 8px rgba(0, 0, 0, 0.78);" />
</div>

<!-- Chat Popup -->
<div id="chatPopup" style="display: none; position: fixed; bottom: 100px; right: 30px; width: 360px; max-width: 90vw; background: #fff; border-radius: 10px; box-shadow: 0 4px 16px rgba(0, 0, 0, 0); z-index: 1001; display: flex; flex-direction: column; overflow: hidden;">
    <div style="background-color: #D1E7D0; color: black; padding: 12px 16px; font-weight: bold; display: flex; justify-content: space-between; align-items: center;">
        <span>Chat Assistant</span>
        <button type="button" id="closeChatBtn" style="background: none; border: none; color: white; font-size: 20px;">&times;</button>
    </div>

    <!-- Chat Messages -->
    <div id="chatMessages" style="padding: 12px; height: 250px; overflow-y: auto; background-color: #f5faff; flex-grow: 1;">
        @if (Model != null)
        {
            if (!string.IsNullOrEmpty(Model.UserMessage))
            {
                <div><strong>You:</strong> @Model.UserMessage</div>
            }
            if (!string.IsNullOrEmpty(Model.BotResponse))
            {
                <div><strong>Bot:</strong> @Model.BotResponse</div>
            }
        }
        else
        {
            <div class="text-muted">No chat messages yet.</div>
        }
    </div>

    <!-- Quick Select Dropdown -->
    <div class="p-2 border-top" style="background-color: #f5faff;">
        <select id="quickQuestions" class="form-select">
            <option value="">Ask something quickly...</option>
            <option value="Check room availability">Check room availability</option>
            <option value="I want to book a room">I want to book a room</option>
            <option value="Show me a report">Show me a report</option>
            <option value="What's the price for rooms?">What's the price for rooms?</option>
            <option value="Show price predictions">Show price predictions</option>
            <option value="I need help">I need help</option>
        </select>
    </div>

    <!-- Input Field (removed as per user request) -->
    <form id="chatForm" class="d-flex border-top" style="padding: 8px; background-color:#f3fdf3;">
        <button type="submit" class="btn btn-primary">Send</button>
    </form>
</div>

<!-- Scripts -->
<script>
document.addEventListener('DOMContentLoaded', function () {
    const chatIcon = document.getElementById('chatIcon');
    const chatPopup = document.getElementById('chatPopup');
    const closeBtn = document.getElementById('closeChatBtn');
    const chatForm = document.getElementById('chatForm');
    const chatMessages = document.getElementById('chatMessages');
    const quickQuestions = document.getElementById('quickQuestions');

    // Open popup on icon click
    chatIcon.addEventListener('click', () => {
        chatPopup.style.display = 'flex';
    });

    // Close popup
    closeBtn.addEventListener('click', () => {
        chatPopup.style.display = 'none';
    });

    // Prevent form submission from reloading the page
    chatForm.onsubmit = function(e) {
        e.preventDefault();
        // No input field, so do nothing
    };

    // Handle quick question selection
    quickQuestions.onchange = async function () {
        const selected = this.value;
        if (selected) {
            addMessage("You", selected);
            const response = await fetch('/Chatbot/Ask', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userMessage: selected })
            });
            const data = await response.json();
            addMessage("Bot", data.botResponse);
            this.selectedIndex = 0;
        }
    };

    function addMessage(sender, text) {
        const msgDiv = document.createElement('div');
        msgDiv.innerHTML = `<strong>${sender}:</strong> ${text}`;
        msgDiv.classList.add('mb-2');
        chatMessages.appendChild(msgDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
});
</script>
